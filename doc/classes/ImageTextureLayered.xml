<?xml version="1.0" encoding="UTF-8" ?>
<class name="ImageTextureLayered" inherits="TextureLayered" version="4.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="../class.xsd">
	<brief_description>
	</brief_description>
	<description>
	</description>
	<tutorials>
	</tutorials>
	<methods>
		<method name="create_from_images">
			<return type="int" enum="Error" />
			<param index="0" name="images" type="Image[]" />
			<description>
				Creates an [ImageTextureLayered] from an array of [Image]s. The first image decides the width, height, image format and mipmapping setting. The other images must have the same width, height, image format and mipmapping setting.
				Each [Image] represents one [code]layer[/code].
			</description>
		</method>
		<method name="update_layer">
			<return type="void" />
			<param index="0" name="image" type="Image" />
			<param index="1" name="layer" type="int" />
			<description>
				Replaces the existing [Image] data at the given [code]layer[/code] with this new image.
				The given [Image] must have the same width, height, image format and mipmapping setting (a [code]bool[/code] value) as the rest of the referenced images.
				If the image format is unsupported, it will be decompressed and converted to a similar and supported [enum Image.Format].
				The update is immediate: synced with the draw.
			</description>
		</method>
	</methods>
</class>
