<?xml version="1.0" encoding="UTF-8" ?>
<class name="SkeletonModification3D" inherits="Resource" is_deprecated="true" version="4.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="../class.xsd">
	<brief_description>
		A resource that operates on bones in a [Skeleton3D].
	</brief_description>
	<description>
		This resource provides an interface that can be expanded so code that operates on bones in a [Skeleton3D] can be mixed and matched together to create complex interactions.
		This is used to provide Godot with a flexible and powerful Inverse Kinematics solution that can be adapted for many different uses.
	</description>
	<tutorials>
	</tutorials>
	<methods>
		<method name="_execute" qualifiers="virtual">
			<return type="void" />
			<param index="0" name="delta" type="float" />
			<description>
				Executes the given modification. This is where the modification performs whatever function it is designed to do.
			</description>
		</method>
		<method name="_setup_modification" qualifiers="virtual">
			<return type="void" />
			<param index="0" name="modification_stack" type="SkeletonModificationStack3D" />
			<description>
				Sets up the modification so it can be executed. This function should be called automatically by the [SkeletonModificationStack3D] containing this modification.
				If you need to initialize a modification before use, this is the place to do it!
			</description>
		</method>
		<method name="clamp_angle">
			<return type="float" />
			<param index="0" name="angle" type="float" />
			<param index="1" name="min" type="float" />
			<param index="2" name="max" type="float" />
			<param index="3" name="invert" type="bool" />
			<description>
				Takes a angle and clamps it so it is within the passed-in [param min] and [param max] range. [param invert] will inversely clamp the angle, clamping it to the range outside of the given bounds.
			</description>
		</method>
		<method name="get_is_setup" qualifiers="const">
			<return type="bool" />
			<description>
				Returns whether this modification has been successfully setup or not.
			</description>
		</method>
		<method name="get_modification_stack">
			<return type="SkeletonModificationStack3D" />
			<description>
				Returns the [SkeletonModificationStack3D] that this modification is bound to. Through the modification stack, you can access the Skeleton3D the modification is operating on.
			</description>
		</method>
		<method name="set_is_setup">
			<return type="void" />
			<param index="0" name="is_setup" type="bool" />
			<description>
				Manually allows you to set the setup state of the modification. This function should only rarely be used, as the [SkeletonModificationStack3D] the modification is bound to should handle setting the modification up.
			</description>
		</method>
	</methods>
	<members>
		<member name="enabled" type="bool" setter="set_enabled" getter="get_enabled" default="true">
			When true, the modification's [method _execute] function will be called by the [SkeletonModificationStack3D].
		</member>
		<member name="execution_mode" type="int" setter="set_execution_mode" getter="get_execution_mode" default="0">
			The execution mode for the modification. This tells the modification stack when to execute the modification. Some modifications have settings that are only available in certain execution modes.
		</member>
	</members>
</class>
