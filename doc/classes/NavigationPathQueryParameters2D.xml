<?xml version="1.0" encoding="UTF-8" ?>
<class name="NavigationPathQueryParameters2D" inherits="RefCounted" version="4.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="../class.xsd">
	<brief_description>
		Parameters to be sent to a 2D navigation path query.
	</brief_description>
	<description>
		This class contains the start and target position and other parameters to be used with [method NavigationServer2D.query_path].
	</description>
	<tutorials>
	</tutorials>
	<members>
		<member name="map" type="RID" setter="set_map" getter="get_map">
			The navigation [code]map[/code] [RID] used in the path query.
		</member>
		<member name="navigation_layers" type="int" setter="set_navigation_layers" getter="get_navigation_layers" default="1">
			The navigation layers the query will use (as a bitmask).
		</member>
		<member name="path_postprocessing" type="int" setter="set_path_postprocessing" getter="get_path_postprocessing" enum="NavigationPathQueryParameters2D.PathPostProcessing" default="0">
			The path postprocessing applied to the raw path corridor found by the [member pathfinding_algorithm].
		</member>
		<member name="pathfinding_algorithm" type="int" setter="set_pathfinding_algorithm" getter="get_pathfinding_algorithm" enum="NavigationPathQueryParameters2D.PathfindingAlgorithm" default="0">
			The pathfinding algorithm used in the path query.
		</member>
		<member name="start_position" type="Vector2" setter="set_start_position" getter="get_start_position" default="Vector2(0, 0)">
			The pathfinding start position in global coordinates.
		</member>
		<member name="target_position" type="Vector2" setter="set_target_position" getter="get_target_position" default="Vector2(0, 0)">
			The pathfinding target position in global coordinates.
		</member>
	</members>
	<constants>
		<constant name="PATHFINDING_ALGORITHM_ASTAR" value="0" enum="PathfindingAlgorithm">
			The path query uses the default A* pathfinding algorithm.
		</constant>
		<constant name="PATH_POSTPROCESSING_CORRIDORFUNNEL" value="0" enum="PathPostProcessing">
			Applies a funnel algorithm to the raw path corridor found by the pathfinding algorithm. This will result in the shortest path possible inside the path corridor. This postprocessing very much depends on the navmesh polygon layout and the created corridor. Especially tile- or gridbased layouts can face artificial corners with diagonal movement due to a jagged path corridor imposed by the cell shapes.
		</constant>
		<constant name="PATH_POSTPROCESSING_EDGECENTERED" value="1" enum="PathPostProcessing">
			Centers every path position in the middle of the traveled navmesh polygon edge. This creates better paths for tile- or gridbased layouts that restrict the movement to the cells center.
		</constant>
	</constants>
</class>
